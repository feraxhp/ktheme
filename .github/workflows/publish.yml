# ADD IN .github/workflows/publish.yml
name: Publish Library to Maven Central
run-name: 🚀 ¡ktheme 2 c-mvn! 🚀
on:
  push:
    branches: [ "Releases" ]
    paths:
      - 'ktheme/build.gradle.kts'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  ktheme:
    name: Build-Publish Ktheme
    runs-on: macos-latest
    steps:
      - name: 🗃️ Checkout code
        uses: actions/checkout@v4

      - name: 📲 Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: 🛠️ Dearmor sign-key
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        run: echo "$SIGNING_KEY" | gpg --dearmor > ${HOME}/secring.gpg

      - name: 🧪 Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: 🔓 chmod +x gradlew
        run: chmod +x gradlew

      - name: 🎛️ Add Gradle Properties
        env:
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: |
          echo "mavenCentralUsername=${MAVEN_CENTRAL_USERNAME}" >> gradle.properties
          echo "mavenCentralPassword=${MAVEN_CENTRAL_PASSWORD}" >> gradle.properties
          echo "signing.keyId=${SIGNING_KEY_ID}" >> gradle.properties
          echo "signing.password=${SIGNING_KEY_PASSWORD}" >> gradle.properties
          echo "signing.secretKeyRingFile=${HOME}/secring.gpg" >> gradle.properties

      - name: 🛠️ Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: 📡 Publish To Maven Central
        run: |
          ./gradlew :ktheme:publishAndReleaseToMavenCentral --no-configuration-cache --stacktrace

      - name: 🎉 Congratulations 🎉
        run: |
          echo "Your Library is Up"
          echo "🎉 Congratulations 🎉"

  sample:
    name: Publish Sample App
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:

      - name: 🗃️ Checkout code
        uses: actions/checkout@v4

      - name: 🧩 Setup Pages
        uses: actions/configure-pages@v5

      - name: 🧪 Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: 📲 Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: 🔓 chmod +x gradlew
        run: chmod +x gradlew

      - name: 🔨 Build with Gradle
        run: ./gradlew :sample:composeApp:wasmJsBrowserDistribution

      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './sample/composeApp/build/dist/wasmJs/productionExecutable'

      - name: 📡 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: 🎉 Congratulations 🎉
        run: |
          echo "Your Library is Up"
          echo "🎉 Congratulations 🎉"
